package work;

import java.util.Scanner;

public class Newone {

 public static void main(String[] args) {

     // int num = -5;
     //System.out.println ("Variable: " + num);
     // num = 501;
     //System.out.println ("Variable: " + num);

// byte - Діапазон чисел від -128 до 127;
// short - Діапазон чисел від -32768 до 32767;
// int - Діапазон чисел від -2147483648 до 2147483647;
// Long - Діапазон чисел від 9 223 372 036 854 775 808 до 9 223 372 036 854 775 809.
// Тобто якщо обирати не той варіант, то тоді ми просто не ефективно працюємо з памʼятью компʼютера.

// byte num1 = 100; // 1 byte (байт, а не бит)
// short num2 = 150; // 2 byte
// int num3 = 5000000; // 4 byte
// long num4 = 50000000; // 8 byte

// Числа з крапкою:
// float num5 = 5.505f; // 4 byte (обовʼязково вкінці перед ; ставиться f)
// double num6 = 5.2345675f; // 8 byte (обовʼязково вкінці перед ; ставиться f або d)

//Символи та текст:
// char sym = ('t');// (обовʼязково одинарні лапки ’текст’) тільки один символ (1 byte)
// String word = ("sobaka");
// (для тексту, обовʼязково подвійні лапки «») (кожен символ важить 2 byte, слово hello 10 byte)

//Логічний тип данних:
//boolean isHappy = false; // (true/false це для умовних конструкцій)  (1 byte)

     //        Scanner scan = new Scanner(System.in);
     //        String text = scan.nextLine();
     //        System.out.print(text);

// Нажать консоль, там ничего не будет, но туда  можно писать.
// Нужно написать текст Some hello, нажать enter и оно отобразится еще раз.
// Можно написать число

     //        Scanner scan = new Scanner(System.in);
     //        int userNum = scan.nextInt();
     //        System.out.print(userNum);

// Математичні дії
     //        int a = 5, b = 10, res;
     //        res = a + b;
     //        System.out.print(res);
// Консоль > 15 > res = a + b, res = a - b, res = a * b

     //        int a = 5, b = 10, res;
     //        res = a + b;
     //        res = res + 1; // или res +=1; или res++;
     //        System.out.print(res);

     //        Scanner scan = new Scanner(System.in);
     //        System.out.print("Enter 1 num: ");
     //        int num1 = scan.nextInt();
     //
     //        System.out.print("Enter 2 num: ");
     //        int num2 = scan.nextInt();
     //
     //        int res = num1 + num2;
     //        System.out.print("Res 1: " + (num1 + num2));

// Консоль > вписать число > enter > вписать другое число > enter (3,4=7)

     //        System.out.print("Res 1: " + (num1 + num2));
     //        System.out.print("Res 2: " + (num1 - num2));
     //        System.out.print("Res 3: " + (num1 * num2));
     //        System.out.print("Res 4: " + (num1 / num2));
     //        System.out.print("Res 5: " + (num1 % num2));

//Оператори: Логічні оператори: &&, ||, !.

//        a && b – логічне "і" - обидва елементи повинні бути істиною
//        a || b – логічне або - хоча б один елемент повинен бути істиною
//        a ^ b – логічне двійкове виключення (один з елементів має бути істиною, і один має бути брехнею)
//        a ! b – логічне не, або ж "інверсія" (перетворює булеве значення справа від себе на протилежне)

     //створити три змінних
//       int zoloto = 1, sriblo = 2, bronza = 3;
     //Загальна інформація про те скільки у нас медалей:
//       System.out.println("Загальна кількість медалей:" + (zoloto + sriblo + bronza));

// чи має наша збірна всі три види медалей (золото, срібло, бронза)
// обов’явзково кожну медаль писати в {}

//          if (zoloto > 0) {
//           if (sriblo > 0) {
//            if (bronza > 0) {
//             System.out.println("У нашої збірної є всі три види медалей"); // (перед этой строчкой тоже открываем {}
//Загальна кількість медалей:6
//У нашої збірної є всі три види медалей
// Якщо змінити bronza = 0, то тоді загальна кількість: 3
// І не буде строчки У нашої збірної є всі три види медалей

//    }
//   }
//  }

//Замість цього можна зробити простіше використовуючи амперсант &&. (і)
//a && b – логічне "і" - обидва елементи повинні бути істиною

//          int zoloto = 1, sriblo = 2, bronza = 1;
//
//          System.out.println("Загальна кількість медалей: " + (zoloto + sriblo + bronza));
// чи має наша збірна всі три види медалей (золото, срібло, бронза)
//           if (zoloto > 0 && sriblo > 0 && bronza > 0)
//           {
//            System.out.println("У нашої збірної є всі три види медалей");
//
//       }

// консоль: Загальна кількість медалей: 4
//У нашої збірної є всі три види медалей
//АЛЕ для оператора && важливо щоб кожне значення (zoloto > 0 && sriblo > 0 && bronza > 0) було true, інакше if не спрацює

//a || b – логічне або - хоча 6 один елемент повинен бути істиною
// чи має наша збірна хочаб одну медаль

//       if (zoloto > 0 || sriblo > 0 || bronza > 0)
//       {
//        System.out.println("У вас як мінімум одна медаль");
//       }

//Загальна кількість медалей: 4
//У нашої збірної є всі три види медалей
//У вас як мінімум одна медаль
//АЛЕ для оператора || важливо щоб ОДНЕ значення (zoloto > 0 || sriblo > 0 || bronza > 0) було true, інакше if не спрацює.
// Якщо змінити на int zoloto = 0, sriblo = 0, bronza = 1;
// Консоль > Загальна кількість медалей: 1
//У вас як мінімум одна медаль
//ТОБТО так як бронза = 1, то || спрацював бо хоча б одне значення є правдою.
// В методі можна робити скільки завгодно операторів IF, але якщо написати ELSE, то він буде залежний від попереднього IF.

//        System.out.println(5);
//        System.out.println(2 * 5);
//        System.out.println(1 == 1);
//        System.out.println(1 == 2);
//        System.out.println(1 > 2);

// Консоль: 5, 10, true, false, false

//     if (true) {
//         System.out.println("Істина");
//     }
// Консоль: Істина
// Або замість if (true) можна написати if (false==false)

// a ^ b – логічне двійкове виключення (один з елементів має бути істиною, і один має бути брехнею)

//     int a = 5, b = 10;
//     if (a == 1 ^ b == 10) {
//         System.out.println("так");
//     } else {
//         System.out.println("ні");
//     }

// Консоль: так, тому що один з елементів є істиною, а інший брехнею
// b true ==10
// Якщо буде два невірних, то буде ні. І якщо буде дві істини то буде ні.

// a ! b – логічне не, або ж "інверсія" (перетворює булеве значення справа від себе на протилежне)
//             System.out.println (true);
//Консоль: true
//           System.out.println (!true);
// Консоль: false
//          System.out.println (!false);
//Консоль: true
//        System.out.println (5>4);
//Консоль: true
//      System.out.println (! (5>4));
//Консоль: false
//в дужках правда, а консоль дає зворотнє значення

//Оператори: Оператори порівняння: ==, !=, >, <, >=, <=. різниця між == та equals()
//Оператори порівнянь (повертають) одне з двох можливих значень – true or false.
// > : більше ніж           5>3
// < : менше ніж            7<15
// == : дорівнює            2==2
// != : не дорівнює         3!=5
// >= : більше або дорівнює 4>=1
// <= : менше або дорівнює  9<=9
// чи (a "менше" ніж б)? фура < велосіпед – false
// чи (a "дорівнює" б)? телефон = гусь – false
// чи (a "не дорівнює" б)? яблоко != кирпич – true (тому що не дорівнюють)
// чи (a "не дорівнює" б)? яблоко != яблоко – false (тому що дорівнюють)
// чи (a "більше або дорівнює" б)? 10 кг гантеля >= 10 кг гантеля – true
// чи (a "більше або дорівнює" б)? 10 кг гантеля >= 6 кг гантеля – true
// чи (a "більше або дорівнює" б)? 10 кг гантеля >= 25 кг гантеля – false

//int chyslo =7;
//більше
//if (chyslo>5) {
// System.out.println("> : Число більше ніж 5");
//} else {
// System.out.println("> : Число НЕ більше ніж 5");
//}

//меньше
//  if (chyslo<11) {
//   System.out.println("> : Число меньше ніж 11");
//  } else {
//   System.out.println("> : Число НЕ меньше ніж 11");
//  }
// дорівнює (якщо одне дорівнює, то це лператор присвоїня)
//  if (chyslo==10) {
//   System.out.println("== : Число дорівнює 10");
//  } else {
//   System.out.println("== : Число НЕ дорівнює 10");
//  }
     //НЕ дорівнює (оператор перевірки нерівності)
     //повертає true (істину) якщо об'єкти неоднакові, і false – якщо однакові
//  if (chyslo !=9) {
//   System.out.println("!= : Число НЕ дорівнює 9");
//  } else {
//   System.out.println("!= : Число дорівнює 9");
//  }
     //більше/рівне (>=)
//  if (chyslo >=8) {
//   System.out.println(">= : Число більше-або-дорівнює 8");
//  } else {
//   System.out.println(">= : Число НЕ більше-або-дорівнює 8");
//  }
     //меньше/рівне (<=)
//  if (chyslo <=20) {
//   System.out.println(">= : Число меньше-або-дорівнює 20");
//  } else {
//   System.out.println(">= : Число НЕ меньше-або-дорівнює 20");
//  }

     // Консоль:
     // > : Число більше ніж 5
     //> : Число меньше ніж 11
     //== : Число НЕ дорівнює 10
     //!= : Число НЕ дорівнює 9
     //>= : Число НЕ більше-або-дорівнює 8
     //>= : Число меньше-або-дорівнює 20

     //Цикли та методи

//Цикли існують для того, щоб виконувати певний код декілька разів поспіль.
//For – Для for треба зробити 3 обов’язкових елементи.
//for ( де початок; де кінець; крок-інкремент (наскільки це число зміниться з кожним повтореням циклу))

     // i < 10 – це до якого моменту наш цикл буде виконуватись
     // i++ – яким чинном наша змінна буде мінятися під час виконная самого циклу
     // i++ – тобто наша змінна за одне коло циклу буде змінюватись на одиницю вперед 0,1,2,3,4,5,6,7,8,9
     // якщо один рядок коду то фігурні дужки можна не прописувати, але якщо більше то після строчки з for { sys }
     // якщо треба щоб було Element is 10, то треба i <=10.

//  for (int i = 0; i < 10; i++)
//   System.out.println("Element is " + i);

     // Консоль:
     //Element is 0
     //Element is 1
     //Element is 2
     //Element is 3
     //Element is 4
     //Element is 5
     //Element is 6
     //Element is 7
     //Element is 8
     //Element is 9

//  for (int i = 1; i <= 5; i++)
//   System.out.println("Element is " + i);

     //Консоль:
     //Element is 1
     //Element is 2
     //Element is 3
     //Element is 4
     //Element is 5

//  for (float i = 100f; i > 0.5f; i /=2)
//   System.out.println("Element is " + i);

     //Консоль:
     //Element is 100.0
     //Element is 50.0
     //Element is 25.0
     //Element is 12.5
     //Element is 6.25
     //Element is 3.125
     //Element is 1.5625
     //Element is 0.78125

//  for (int lichylka = 0; lichylka <= 10; lichylka = lichylka+2)
//   System.out.println("Element is " + lichylka);

     //Консоль:
     //Element is 0
     //Element is 2
     //Element is 4
     //Element is 6
     //Element is 8
     //Element is 10

//  for (int lichylka = 0; lichylka <= 10; lichylka = lichylka+5)
//   System.out.println("Element is " + lichylka);

     //Консоль:
     //Element is 0
     //Element is 5
     //Element is 10

// Щоб вивести всі парні числа:

//  for (int lichylka = 20; lichylka <= 30; lichylka = lichylka+2)
//   System.out.println("Element is " + lichylka);

     //Консоль:
     //
     //Element is 20
     //Element is 22
     //Element is 24
     //Element is 26
     //Element is 28
     //Element is 30

// Якщо int =0, а while (0<10), то знак такий тому що це так і є, і рядок йде за зростанням.
// Якщо б int=100, a while (100>10).
// В нашому випадку знизу ми хочемо щоб 10 було включно,
// Тому ставимо знак >= –100>=10. Знак >, тому что 100 і вправду більше 10.
//І відповідно рядок буде йти в зворотному порядку.

//                int i = 0;
//                while (i<10) {
//               System.out.println("Element is " + i);
//                i++;
//                }
     // Консоль:
     //Element is 0
     //Element is 1
     //Element is 2
     //Element is 3
     //Element is 4
     //Element is 5
     //Element is 6
     //Element is 7
     //Element is 8
     //Element is 9

//     int i = 100;
//     while (i >= 10) {
//         System.out.println("Element is " + i);
//         i -= 10;
//     }
// По сути значення рухаются від 100 до 10 через 10, знак дорівнюю означає включаючи Element is 10
// Те який знак треба ставити залежить від чисел (100>10)
// Консоль:
//Element is 100
//Element is 90
//Element is 80
//Element is 70
//Element is 60
//Element is 50
//Element is 40
//Element is 30
//Element is 20
//Element is 10

//                 Scanner scan = new Scanner(System.in);
//                 int chyslo = 0;
// chyslo може бути будь яким, навіть більше ніж 7
// для запуску програми це не важливо, головне щоб не 7.

//                 while (chyslo != 7) // елемент коду виконується тільки якщо 0 !=7
//                 {
//                     System.out.println("Введіть/вгадайте число між 0 і 10");
//                     chyslo = scan.nextInt();
//                 if (chyslo <0 || chyslo > 10) {
//                     System.out.println("Число має бути між 0 і 10");
//                 }
//                 }
//                 System.out.println("Вітаю! Ви вгадали");

// Консоль:
//Введіть/вгадайте число між 0 і 10
//2 (вводимо власноруч)
//Введіть/вгадайте число між 0 і 10
// 11
//Число має бути між 0 і 10
//Введіть/вгадайте число між 0 і 10
//7 (вводимо власноруч)
//Вітаю! Ви вгадали

//     Scanner scan = new Scanner(System.in);
//     String slovo = "";
// суть така ж як і в минулому випадку, не важливо яке число або яке слово для запуску програми.

//     while (slovo.equals("чай") != true) // або простіше while (!slovo.equals("чай"))
//  // без true навіть якщо у відповіді написати чай, то все одно програма буде продовжуватись
//     {
//         System.out.println("Хочу чаю");
//         slovo = scan.nextLine();
//     }
//     System.out.println("Дякую за чай!");

//     Консоль:
//     Хочу чаю
//     кава (сами вводим)
//     Хочу чаю
//     чай (сами вводим)
//     Дякую за чай!

//     int i = 0;
//     do {
//         System.out.println("Element is " + i);
//         i++; // інкермент
//     } while(i<10);

     // Консоль:
     //Element is 0
     //Element is 1
     //Element is 2
     //Element is 3
     //Element is 4
     //Element is 5
     //Element is 6
     //Element is 7
     //Element is 8
     //Element is 9


//             int i = 100;
//             do {
//                 System.out.println("Element is " + i);
//                 i++;
//             } while(i<10);

     // Консоль:
     //Element is 100
     // Тобто цикл хоча б один раз виконується, хоча умова відразу неправильна 100<10

     // Оператори в циклах

// В цьому випадку ми можемо власноруч зупинитись на числі 8, не доводячи до 10, командою if (1==8)
// Тіпа програма буде працювати, допоки i=1, буде меньше 8
// Коли (і) дійде до 8, буде 8==8, програма зупиниться, не включаючи 8, тобто до 7.
//Можна або break або continue прибрати, воно не впливає на роботу один одного.

//     for (byte i =1; i<=10; i++) {
//         if (i==8)
//             break; // програма йде до 8 (не включаючи)
//         if (i % 2 ==0)

// Це перевіряє, чи число парне. i % 2 == 0 означає: остача від ділення i на 2 дорівнює 0 → тобто парне число.
// Якщо число парне — команда continue пропускає цю ітерацію циклу і переходить до наступного i.
// Пропускає цикл тіпа пропускає числа 2,4,6.

//             continue; // програма йде виключаючи кожне друге число, тобто всі парні числа
//         System.out.println(i);
//     }
// continue — “пропусти все нижче і йди на наступне коло”
// break — “все, стоп, вийти з циклу повністю”
     //Консоль:
     //1
     //2
     //3
     //4
     //5
     //6
     //7

     //(i % 2 ==0)
     //Консоль:
     //1
     //3
     //5
     //7



 }
    }




